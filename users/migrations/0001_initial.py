# Generated by Django 3.0.5 on 2023-07-21 10:27

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(blank=True, default='1', max_length=10, null=True)),
                ('groups', models.ManyToManyField(to='auth.Group')),
                ('user_permissions', models.ManyToManyField(to='auth.Permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('question_text', models.TextField(blank=True, null=True)),
                ('question_file', models.FileField(blank=True, max_length=150, null=True, upload_to='media/files/assignment_files')),
                ('use_as_assessment', models.BooleanField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CBT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('duration', models.IntegerField()),
                ('questions', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Examination',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('examination_text', models.TextField(blank=True, null=True)),
                ('examination_file', models.FileField(blank=True, max_length=150, null=True, upload_to='media/files/examination_files')),
            ],
        ),
        migrations.CreateModel(
            name='SessionYearModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('session_start_year', models.DateField()),
                ('session_end_year', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.TextField(blank=True, default='None', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user_type', models.CharField(blank=True, max_length=10, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], default='None', max_length=7, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='save_image')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='None', max_length=7)),
                ('address', models.TextField(blank=True, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='save_image')),
                ('user_types', models.CharField(blank=True, max_length=10, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('parents_phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('parent_name', models.CharField(blank=True, max_length=500, null=True)),
                ('parent_status', models.CharField(blank=True, choices=[('father', 'Father'), ('mother', 'Mother'), ('guardian', 'Guardian')], max_length=50, null=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('department_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Department')),
                ('session_year_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.SessionYearModel')),
            ],
        ),
        migrations.CreateModel(
            name='StudentClass',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.Department')),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('subj_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='users.StudentClass')),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('test_name', models.CharField(blank=True, choices=[('1st', 'First CA Test'), ('2nd', 'Second CA Test'), ('3rd', 'Third CA Test')], max_length=30, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('test_text', models.TextField(blank=True, null=True)),
                ('test_file', models.FileField(blank=True, max_length=150, null=True, upload_to='media/files/test_files')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Staff')),
                ('form_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.StudentClass')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.Subjects')),
            ],
        ),
        migrations.CreateModel(
            name='Submitted_Test',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('submitted_status', models.BooleanField(blank=True, null=True)),
                ('submitted_test_text', models.TextField(blank=True, null=True)),
                ('submitted_test_file', models.FileField(blank=True, max_length=150, null=True, upload_to='media/files/submitted_assignment_files')),
                ('score', models.FloatField(blank=True, null=True)),
                ('assessed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='test_assessed_by', to='users.Staff')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.Subjects')),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='test_submitted_by', to='users.Student')),
                ('test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Test')),
            ],
        ),
        migrations.CreateModel(
            name='Submitted_Examination',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('submitted_exam_text', models.TextField(blank=True, null=True)),
                ('submitted_status', models.BooleanField(blank=True, null=True)),
                ('submitted_exam_file', models.FileField(blank=True, max_length=150, null=True, upload_to='media/files/submitted_examination_files')),
                ('score', models.FloatField(blank=True, null=True)),
                ('assessed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='examination_assessed_by', to='users.Staff')),
                ('exam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Examination')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.Subjects')),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='examination_submitted_by', to='users.Student')),
            ],
        ),
        migrations.CreateModel(
            name='Submitted_Assignment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('submitted_assignment_text', models.TextField(blank=True, null=True)),
                ('submitted_status', models.BooleanField(blank=True, null=True)),
                ('submitted_assignment_file', models.FileField(blank=True, max_length=150, null=True, upload_to='media/files/submitted_assignment_files')),
                ('score', models.FloatField(blank=True, null=True)),
                ('assessed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assignment_assessed_by', to='users.Staff')),
                ('assignment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Assignment')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.Subjects')),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='assignment_submitted_by', to='users.Student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentResult',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject_1st_test_marks', models.FloatField(blank=True, null=True)),
                ('subject_2nd_test_marks', models.FloatField(blank=True, null=True)),
                ('subject_assignment_marks', models.FloatField(blank=True, null=True)),
                ('subject_project_marks', models.FloatField(blank=True, null=True)),
                ('subject_exam_marks', models.FloatField(blank=True, null=True)),
                ('subject_total_marks', models.FloatField(blank=True, null=True)),
                ('grade', models.CharField(blank=True, max_length=12, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.SessionYearModel')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Student')),
                ('subject_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Subjects')),
            ],
        ),
        migrations.CreateModel(
            name='StudentLeave',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('leave_message', models.TextField()),
                ('leave_status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Student')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='student_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.StudentClass'),
        ),
        migrations.AddField(
            model_name='student',
            name='subjects',
            field=models.ManyToManyField(to='users.Subjects'),
        ),
        migrations.CreateModel(
            name='StaffLeave',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('leave_date', models.CharField(max_length=255)),
                ('leave_message', models.TextField()),
                ('leave_status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Staff')),
            ],
        ),
        migrations.AddField(
            model_name='staff',
            name='form_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.StudentClass'),
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('heading', models.CharField(blank=True, max_length=150, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('lecture_text', models.TextField(blank=True, null=True)),
                ('lecture_video', models.FileField(blank=True, max_length=150, null=True, upload_to='media/files/Lectures/Videos')),
                ('lecture_ppt', models.FileField(blank=True, max_length=150, null=True, upload_to='media/files/Lectures/PPT')),
                ('lecture_file', models.FileField(blank=True, max_length=150, null=True, upload_to='media/files/Lectures/File')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='users.Staff')),
                ('form_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.StudentClass')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.Subjects')),
            ],
        ),
        migrations.CreateModel(
            name='FeedBackStudent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback', models.TextField()),
                ('feedback_reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Student')),
            ],
        ),
        migrations.CreateModel(
            name='FeedBackStaffs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback', models.TextField()),
                ('feedback_reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Staff')),
            ],
        ),
        migrations.AddField(
            model_name='examination',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='users.Staff'),
        ),
        migrations.AddField(
            model_name='examination',
            name='form_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.StudentClass'),
        ),
        migrations.AddField(
            model_name='examination',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.Subjects'),
        ),
        migrations.CreateModel(
            name='CBTR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('cbt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CBT')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Student')),
            ],
        ),
        migrations.CreateModel(
            name='CBTQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(blank=True, max_length=1000, null=True)),
                ('marks', models.PositiveIntegerField(blank=True, null=True)),
                ('option1', models.CharField(blank=True, max_length=100, null=True)),
                ('option2', models.CharField(blank=True, max_length=100, null=True)),
                ('option3', models.CharField(blank=True, max_length=100, null=True)),
                ('option4', models.CharField(blank=True, max_length=100, null=True)),
                ('answers', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('cbt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CBT')),
            ],
        ),
        migrations.CreateModel(
            name='BulkEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=1000)),
                ('sent_to', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('sent_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='assignment',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Staff'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='department_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Department'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='form_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.StudentClass'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.Subjects'),
        ),
        migrations.CreateModel(
            name='AdminHOD',
            fields=[
                ('user_type', models.CharField(blank=True, max_length=10, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='admin_image')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
